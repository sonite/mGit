/******************************************************************************
 *                                                                      	  *
 *        	      	 Graphic LCD Font (Ascii Characters)    		      	  *
 *                                                                      	  *
 *              	      Author: Finsun Inresol AB        		              *
 ******************************************************************************
 * FileName:        Font5x7.h												  *
 * Dependencies:	none													  *
 * Processor:       PIC18													  *
 * Complier:        MCC18 v3.13												  *
 ******************************************************************************/
#ifndef _FONT5X7_H
#define _FONT5X7_H

#define FONT_OFFSET 0

enum
{
	CHARACTER_WIDTH = 5,
	CHARACTER_HEIGHT = 8,
	CHARACTER_COUNT = 256
};

static rom const uint8_t Font[CHARACTER_COUNT][CHARACTER_WIDTH] =
{ //ASCII CHARACTER
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 0 control Null 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 1 control Start of Heading 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 2 control Start of Text 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 3 control End of Text 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 4 control End of Transmission 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 5 control Enquiry 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 6 control Acknowledge 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 7 control Bell 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 8 control Backspace 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 9 control Horizontal Tabulation 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 10 control Line Feed 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 11 control Vertical Tabulation 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 12 control Form Feed 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 13 control Carriage Return 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 14 control Shift Out 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 15 control Shift In 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 16 control Data Link Escape 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 17 control Device Control One 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 18 control Device Control Two 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 19 control Device Control Three 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 20 control Device Control Four 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 21 control Negative Acknowledge 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 22 control Synchronous Idle 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 23 control End of Transmission Block 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 24 control Cancel 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 25 control End of Medium 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 26 control Substitute 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 27 control Escape 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 28 control File Separator 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 29 control Group Separator 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 30 control Record Separator 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 31 control Unit Separator 
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 32 SPACE
	{  0x00, 0x00, 0x7d, 0x00, 0x00 },  // 33 !
	{  0x00, 0x70, 0x00, 0x70, 0x00 },  // 34 "
	{  0x14, 0x7f, 0x14, 0x7f, 0x14 },  // 35 #
	{  0x12, 0x2a, 0x7f, 0x2a, 0x24 },  // 36 $
	{  0x62, 0x64, 0x08, 0x13, 0x23 },  // 37 %
	{  0x36, 0x49, 0x55, 0x22, 0x05 },  // 38 &
	{  0x00, 0x50, 0x60, 0x00, 0x00 },  // 39 ´
	{  0x00, 0x1c, 0x22, 0x41, 0x00 },  // 40 (
	{  0x00, 0x41, 0x22, 0x1c, 0x00 },  // 41 )
	{  0x14, 0x08, 0x3e, 0x08, 0x14 },  // 42 *
	{  0x08, 0x08, 0x3e, 0x08, 0x08 },  // 43 +
	{  0x00, 0x05, 0x06, 0x00, 0x00 },  // 44 ,
	{  0x08, 0x08, 0x08, 0x08, 0x08 },  // 45 -
	{  0x00, 0x03, 0x03, 0x00, 0x00 },  // 46 .
	{  0x02, 0x04, 0x08, 0x10, 0x20 },  // 47 /
	{  0x3e, 0x45, 0x49, 0x51, 0x3e },  // 48 0
	{  0x00, 0x21, 0x7f, 0x01, 0x00 },  // 49 1
	{  0x21, 0x43, 0x45, 0x49, 0x31 },  // 50 2
	{  0x42, 0x41, 0x51, 0x69, 0x46 },  // 51 3
	{  0x0c, 0x14, 0x24, 0x7f, 0x04 },  // 52 4
	{  0x72, 0x51, 0x51, 0x51, 0x4e },  // 53 5
	{  0x1e, 0x29, 0x49, 0x49, 0x06 },  // 54 6
	{  0x40, 0x47, 0x48, 0x50, 0x60 },  // 55 7
	{  0x36, 0x49, 0x49, 0x49, 0x36 },  // 56 8
	{  0x30, 0x49, 0x49, 0x4a, 0x3c },  // 57 9
	{  0x00, 0x36, 0x36, 0x00, 0x00 },  // 58 :
	{  0x00, 0x35, 0x36, 0x00, 0x00 },  // 59 ;
	{  0x08, 0x14, 0x22, 0x41, 0x00 },  // 60 <
	{  0x14, 0x14, 0x14, 0x14, 0x14 },  // 61 =
	{  0x41, 0x22, 0x14, 0x08, 0x00 },  // 62 >
	{  0x20, 0x40, 0x45, 0x48, 0x30 },  // 63 ?
	{  0x26, 0x49, 0x4f, 0x41, 0x3e },  // 64 @
	{  0x3f, 0x44, 0x44, 0x44, 0x3f },  // 65 A
	{  0x7f, 0x49, 0x49, 0x49, 0x36 },  // 66 B
	{  0x3e, 0x41, 0x41, 0x41, 0x22 },  // 67 C
	{  0x7f, 0x41, 0x41, 0x41, 0x3e },  // 68 D
	{  0x7f, 0x49, 0x49, 0x49, 0x41 },  // 69 E
	{  0x7f, 0x48, 0x48, 0x48, 0x40 },  // 70 F
	{  0x3e, 0x41, 0x49, 0x49, 0x2f },  // 71 G
	{  0x7f, 0x08, 0x08, 0x08, 0x7f },  // 72 H
	{  0x00, 0x41, 0x7f, 0x41, 0x00 },  // 73 I
	{  0x02, 0x01, 0x41, 0x7e, 0x40 },  // 74 J
	{  0x7f, 0x08, 0x14, 0x22, 0x41 },  // 75 K
	{  0x7f, 0x01, 0x01, 0x01, 0x01 },  // 76 L
	{  0x7f, 0x40, 0x20, 0x40, 0x7f },  // 77 M
	{  0x7f, 0x10, 0x08, 0x04, 0x7f },  // 78 N
	{  0x3e, 0x41, 0x41, 0x41, 0x3e },  // 79 O
	{  0x7f, 0x48, 0x48, 0x48, 0x30 },  // 80 P
	{  0x3e, 0x41, 0x45, 0x42, 0x3d },  // 81 Q
	{  0x7f, 0x48, 0x4c, 0x4a, 0x31 },  // 82 R
	{  0x31, 0x49, 0x49, 0x49, 0x46 },  // 83 S
	{  0x40, 0x40, 0x7f, 0x40, 0x40 },  // 84 T
	{  0x7e, 0x01, 0x01, 0x01, 0x7e },  // 85 U
	{  0x7c, 0x02, 0x01, 0x02, 0x7c },  // 86 V
	{  0x7e, 0x01, 0x0e, 0x01, 0x7e },  // 87 W
	{  0x63, 0x14, 0x08, 0x14, 0x63 },  // 88 X
	{  0x70, 0x08, 0x07, 0x08, 0x70 },  // 89 Y
	{  0x43, 0x45, 0x49, 0x51, 0x61 },  // 90 Z
	{  0x00, 0x7f, 0x41, 0x41, 0x00 },  // 91 [
	{  0x20, 0x10, 0x08, 0x04, 0x02 },  // 92 \ (dubble)
	{  0x00, 0x41, 0x41, 0x7f, 0x00 },  // 93 ]
	{  0x10, 0x20, 0x40, 0x20, 0x10 },  // 94 ^
	{  0x01, 0x01, 0x01, 0x01, 0x01 },  // 95 _
	{  0x00, 0x40, 0x20, 0x10, 0x00 },  // 96 `
	{  0x02, 0x15, 0x15, 0x15, 0x0f },  // 97 a
	{  0x7f, 0x09, 0x11, 0x11, 0x0e },  // 98 b
	{  0x0e, 0x11, 0x11, 0x11, 0x02 },  // 99 c
	{  0x0e, 0x11, 0x11, 0x09, 0x7f },  // 100 d
	{  0x0e, 0x15, 0x15, 0x15, 0x0c },  // 101 e
	{  0x08, 0x3f, 0x48, 0x40, 0x20 },  // 102 f
	{  0x30, 0x49, 0x49, 0x49, 0x7e },  // 103 g
	{  0x7f, 0x08, 0x10, 0x10, 0x0f },  // 104 h
	{  0x00, 0x11, 0x5f, 0x01, 0x00 },  // 105 i
	{  0x02, 0x01, 0x21, 0x7e, 0x00 },  // 106 j
	{  0x7f, 0x04, 0x0a, 0x11, 0x00 },  // 107 k
	{  0x00, 0x41, 0x7f, 0x01, 0x00 },  // 108 l
	{  0x1f, 0x10, 0x0c, 0x10, 0x0f },  // 109 m 
	{  0x1f, 0x08, 0x10, 0x10, 0x0f },  // 110 n
	{  0x0e, 0x11, 0x11, 0x11, 0x0e },  // 111 o
	{  0x1f, 0x14, 0x14, 0x14, 0x08 },  // 112 p
	{  0x08, 0x14, 0x14, 0x0c, 0x1f },  // 113 q
	{  0x1f, 0x08, 0x10, 0x10, 0x08 },  // 114 r
	{  0x09, 0x15, 0x15, 0x15, 0x12 },  // 115 s
	{  0x20, 0x7e, 0x21, 0x01, 0x02 },  // 116 t
	{  0x1e, 0x01, 0x01, 0x02, 0x1f },  // 117 u
	{  0x1c, 0x02, 0x01, 0x02, 0x1c },  // 118 v
	{  0x1e, 0x01, 0x06, 0x01, 0x1e },  // 119 w
	{  0x11, 0x0a, 0x04, 0x0a, 0x11 },  // 120 x
	{  0x18, 0x05, 0x05, 0x05, 0x1e },  // 121 y
	{  0x11, 0x13, 0x15, 0x19, 0x11 },  // 122 z
	{  0x00, 0x08, 0x36, 0x41, 0x00 },  // 123 {
	{  0x00, 0x00, 0x7f, 0x00, 0x00 },  // 124 |
	{  0x00, 0x41, 0x36, 0x08, 0x00 },  // 125 }
	{  0x0C, 0x18, 0x0C, 0x18, 0x00 },  // 126 ~ {  0x08, 0x08, 0x2a, 0x1c, 0x08 }, pil höger
	{  0x08, 0x1c, 0x2a, 0x08, 0x08 },  // 127 content Delete {  0x08, 0x1c, 0x2a, 0x08, 0x08 }, pil vänster
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 128
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 129
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 130
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 131
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 132
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 133
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 134
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 135
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 136
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 137
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 138
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 139
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 140
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 141
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 142
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 143
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 144
	{  0x07, 0x05, 0x07, 0x00, 0x00 },  // 145
	{  0x00, 0x00, 0x78, 0x40, 0x40 },  // 146
	{  0x01, 0x01, 0x0f, 0x00, 0x00 },  // 147
	{  0x04, 0x02, 0x01, 0x00, 0x00 },  // 148
	{  0x00, 0x0c, 0x0c, 0x00, 0x00 },  // 149
	{  0x28, 0x28, 0x29, 0x2a, 0x3c },  // 150
	{  0x10, 0x11, 0x16, 0x14, 0x18 },  // 151
	{  0x02, 0x04, 0x0f, 0x10, 0x00 },  // 152
	{  0x0c, 0x08, 0x19, 0x09, 0x0e },  // 153
	{  0x09, 0x09, 0x0f, 0x09, 0x09 },  // 154
	{  0x09, 0x0a, 0x0c, 0x1f, 0x08 },  // 155
	{  0x08, 0x1f, 0x08, 0x0a, 0x0c },  // 156
	{  0x01, 0x09, 0x09, 0x0f, 0x01 },  // 157
	{  0x15, 0x15, 0x15, 0x1f, 0x00 },  // 158
	{  0x0c, 0x00, 0x0d, 0x01, 0x0e },  // 159
	{  0x04, 0x04, 0x04, 0x04, 0x04 },  // 160
	{  0x08, 0x08, 0x2a, 0x1c, 0x08 },  // 161 ¡ (Pil Höger)
	{  0x08, 0x1c, 0x2a, 0x08, 0x08 },  // 162 ¢ (Pil vänster)
	{  0x04, 0x02, 0xff, 0x02, 0x04 },  // 163 £ (Pil upp)
	{  0x20, 0x40, 0xff, 0x40, 0x20 },  // 164 ¤ (Pil ner)
	{  0x88, 0x90, 0xBE, 0x90, 0x88 },  // 165 ¥ (Special set pil upp)
	{  0x21, 0x7e, 0x20, 0x21, 0x3e },  // 166 ¦
	{  0x28, 0x28, 0x7f, 0x28, 0x28 },  // 167 §
	{  0x08, 0x31, 0x21, 0x22, 0x3c },  // 168 ¨
	{  0x3f, 0xff, 0x3f, 0x3f, 0x3f },  // 169 ©
	{  0x21, 0x21, 0x21, 0x21, 0x3f },  // 170 ª
	{  0x20, 0x79, 0x22, 0x7c, 0x20 },  // 171 «
	{  0x29, 0x29, 0x01, 0x02, 0x1c },  // 172 ¬
	{  0x21, 0x22, 0x24, 0x2a, 0x31 },  // 173
	{  0x20, 0x7e, 0x21, 0x29, 0x31 },  // 174 ®
	{  0x30, 0x09, 0x01, 0x02, 0x3c },  // 175 ¯
	{  0x00, 0x00, 0x60, 0x90, 0x60 },  // 176 °
	{  0x28, 0x29, 0x3e, 0x48, 0x08 },  // 177 ±
	{  0x00, 0x00, 0x98, 0xA8, 0x48 },  // 178 ²
	{  0x10, 0x51, 0x5e, 0x50, 0x10 },  // 179 ³
	{  0x00, 0x7f, 0x08, 0x04, 0x00 },  // 180 ´
	{  0x11, 0x12, 0x7c, 0x10, 0x10 },  // 181 µ
	{  0x01, 0x21, 0x21, 0x21, 0x01 },  // 182 ¶
	{  0x21, 0x2a, 0x24, 0x2a, 0x30 },  // 183 ·
	{  0x22, 0x24, 0x6f, 0x34, 0x22 },  // 184 ¸
	{  0x00, 0x01, 0x02, 0x7c, 0x00 },  // 185 ¹
	{  0x0f, 0x00, 0x20, 0x10, 0x0f },  // 186 º
	{  0x7e, 0x11, 0x11, 0x11, 0x11 },  // 187 »
	{  0x20, 0x21, 0x21, 0x22, 0x3c },  // 188 ¼
	{  0x10, 0x20, 0x10, 0x08, 0x06 },  // 189 ½
	{  0x26, 0x20, 0x7f, 0x20, 0x26 },  // 190 ¾
	{  0x20, 0x24, 0x22, 0x25, 0x38 },  // 191 ¿
	{  0x00, 0x2a, 0x2a, 0x2a, 0x01 },  // 192 À
	{  0x0e, 0x12, 0x22, 0x02, 0x07 },  // 193 Á
	{  0x01, 0x0a, 0x04, 0x0a, 0x30 },  // 194 Â
	{  0x28, 0x3e, 0x29, 0x29, 0x29 },  // 195 Ã
	{  0x1f, 0xa4, 0x24, 0xa4, 0x1f },  // 196 Ä
	{  0x1f, 0xe4, 0xa4, 0xe4, 0x1f },  // 197 Å
	{  0x29, 0x29, 0x29, 0x29, 0x3f },  // 198 Æ
	{  0x10, 0x50, 0x51, 0x52, 0x1c },  // 199
	{  0x78, 0x01, 0x02, 0x7c, 0x00 },  // 200
	{  0x1f, 0x00, 0x3f, 0x01, 0x06 },  // 201
	{  0x3f, 0x01, 0x02, 0x04, 0x08 },  // 202
	{  0x3f, 0x21, 0x21, 0x21, 0x3f },  // 203
	{  0x38, 0x20, 0x21, 0x22, 0x3c },  // 204
	{  0x21, 0x21, 0x01, 0x02, 0x0c },  // 205
	{  0x20, 0x10, 0x40, 0x20, 0x00 },  // 206
	{  0x70, 0x50, 0x70, 0x00, 0x00 },  // 207
	{  0x0e, 0x11, 0x09, 0x06, 0x19 },  // 208
	{  0x02, 0x55, 0x15, 0x55, 0x0f },  // 209
	{  0x1f, 0x2a, 0x2a, 0x2a, 0x14 },  // 210
	{  0x0a, 0x15, 0x15, 0x11, 0x02 },  // 211
	{  0x3f, 0x02, 0x02, 0x04, 0x3e },  // 212
	{  0x0e, 0x11, 0x19, 0x15, 0x12 },  // 213
	{  0x1e, 0xa1, 0x21, 0xa1, 0x1e },  // 214 Ö
	{  0x1c, 0x22, 0x22, 0x22, 0x3f },  // 215
	{  0x02, 0x01, 0x1e, 0x10, 0x10 },  // 216 Ø
	{  0x20, 0x20, 0x00, 0x70, 0x00 },  // 217
	{  0x00, 0x00, 0x10, 0x5f, 0x00 },  // 218
	{  0x28, 0x10, 0x28, 0x00, 0x00 },  // 219
	{  0x18, 0x24, 0x7e, 0x24, 0x08 },  // 220 ü
	{  0x14, 0x7f, 0x15, 0x01, 0x01 },  // 221
	{  0x1f, 0x48, 0x50, 0x50, 0x0f },  // 222
	{  0x0e, 0x51, 0x11, 0x51, 0x0e },  // 223
	{  0x3f, 0x12, 0x22, 0x22, 0x1c },  // 224
	{  0x1c, 0x22, 0x22, 0x12, 0x3f },  // 225
	{  0x3c, 0x52, 0x52, 0x52, 0x3c },  // 226
	{  0x03, 0x05, 0x02, 0x05, 0x06 },  // 227
	{  0x1a, 0x26, 0x20, 0x26, 0x1a },  // 228 ä
	{  0x1e, 0x41, 0x01, 0x42, 0x1f },  // 229 å
	{  0x63, 0x55, 0x49, 0x41, 0x41 },  // 230 æ
	{  0x22, 0x3c, 0x20, 0x3e, 0x22 },  // 231
	{  0x51, 0x4a, 0x44, 0x4a, 0x51 },  // 232
	{  0x3c, 0x02, 0x02, 0x02, 0x3f },  // 233
	{  0x28, 0x28, 0x3e, 0x28, 0x48 },  // 234
	{  0x22, 0x3c, 0x28, 0x28, 0x2e },  // 235
	{  0x3e, 0x28, 0x38, 0x28, 0x3e },  // 236
	{  0x04, 0x04, 0x15, 0x04, 0x04 },  // 237
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 238
	{  0x7f, 0x7f, 0x7f, 0x7f, 0x7f },  // 239
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 240
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 241
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 242
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 243
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 244
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 245
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 246 ö
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 247 ÷
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 248 ø
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 249
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 250
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 251
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 252
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 253
	{  0x00, 0x00, 0x00, 0x00, 0x00 },  // 254
	{  0x00, 0x00, 0x00, 0x00, 0x00 }}; // 255

static rom const uint8_t Widths[CHARACTER_COUNT] =
{
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
};

#endif
